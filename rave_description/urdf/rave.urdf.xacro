<?xml version="1.0" ?>
<robot name="rave_robot" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:property name="robot_namespace" value="/rave"/>

  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:include filename="$(find rave_description)/urdf/common_properties.urdf"/>
  <xacro:include filename="$(find rave_description)/urdf/inertials.xacro"/>
  <xacro:include filename="$(find rave_description)/urdf/wheel.urdf.xacro"/>

  <!-- main axis dimensions -->
  <xacro:property name="bar_x" value="1.0" /> 
  <xacro:property name="bar_y" value="0.05" /> 
  <xacro:property name="bar_z" value="0.05" /> 
  <xacro:property name="bar_mass" value="1" /> 

  <!-- Wheel Properties -->
  <xacro:property name="wheel_length" value="0.1143" />
  <xacro:property name="wheel_radius" value="0.1651" />


  <!-- Gazebo plugins -->
  <!-- Load ros_control plugin using the steer_bot_hardware_gazebo
  implementation of the hardware_interface::RobotHW -->
  <!-- <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>${robot_namespace}</robotNamespace>
      <robotSimType>steer_bot_hardware_gazebo/SteerBotHardwareGazebo</robotSimType>
      <legacyModeNS>false</legacyModeNS>
    </plugin>
  </gazebo> -->

  <gazebo> 
      <!--ROS Control Plugin -->
      <plugin name="gazebo_ros_controller_manager" filename="libgazebo_ros_control.so">
          <legacyModeNS>true</legacyModeNS>
          <!-- <robotNamespace>${robot_namespace}</robotNamespace> -->
          <robotSimType>steer_bot_hardware_gazebo/SteerBotHardwareGazebo</robotSimType>
      </plugin>
  </gazebo>

  <!-- Base link -->
    <link name="base_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${bar_x} ${bar_y} ${bar_z}" />
            </geometry>
            <material name="light_black" />
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${bar_x} ${bar_y} ${bar_z}" />
            </geometry>
        </collision>
        <xacro:solid_cuboid_inertial 
        rpy="0 0 0" xyz="0 0 0"
        mass="${bar_x}"
        x="${bar_x}" y="${bar_y}" z="${bar_z}" />

        <visual>
            <origin xyz="${bar_x/2 - bar_y/2} 0 0" rpy="0 0 ${M_PI/2}"/>
            <geometry>
                <box size="${bar_x/2} ${bar_y} ${bar_z}" />
            </geometry>
            <material name="light_black" />
        </visual>
        <collision>
            <origin xyz="${bar_x/2 - bar_y/2} 0 0" rpy="0 0 ${M_PI/2}"/>
            <geometry>
                <box size="${bar_x/2} ${bar_y} ${bar_z}" />
            </geometry>
        </collision>
        <xacro:solid_cuboid_inertial 
        rpy="0 0 0" xyz="${bar_x/2 - bar_y/2} 0 ${M_PI/2}"
        mass="${bar_x}"
        x="${bar_x/2}" y="${bar_y}" z="${bar_z}" />

        <visual>
            <origin xyz="-${bar_x/2 - bar_y/2} 0 0" rpy="0 0 ${M_PI/2}"/>
            <geometry>
                <box size="${bar_x/2} ${bar_y} ${bar_z}" />
            </geometry>
            <material name="light_black" />
        </visual>
        <collision>
            <origin xyz="-${bar_x/2 - bar_y/2} 0 0" rpy="0 0 ${M_PI/2}"/>
            <geometry>
                <box size="${bar_x/2} ${bar_y} ${bar_z}" />
            </geometry>
        </collision>
        <xacro:solid_cuboid_inertial 
        rpy="0 0 0" xyz="-${bar_x/2 - bar_y/2} 0 ${M_PI/2}"
        mass="${bar_x}"
        x="${bar_x/2}" y="${bar_y}" z="${bar_z}" />
    </link>

    <!-- Base footprint is on the ground under the robot -->
    <link name="base_footprint"/>

    <joint name="base_footprint_joint" type="fixed">
    <parent link="base_link" />
    <child link="base_footprint" />
    <origin xyz="0 0 -${wheel_radius}" rpy="0 0 0" />
    </joint>

  <!-- Rave wheel macros -->
  <xacro:front_wheel_lr wheel_prefix="front_right">
    <origin xyz="${bar_x/2 - bar_y/2 } -${bar_x/4 + wheel_length/2} 0.0" rpy="0 0 0" />
  </xacro:front_wheel_lr>

  <xacro:front_wheel_lr wheel_prefix="front_left">
    <origin xyz="${bar_x/2 - bar_y/2 } ${bar_x/4 + wheel_length/2} 0.0" rpy="${M_PI} 0 0" />
  </xacro:front_wheel_lr>

  <xacro:rear_wheel_lr wheel_prefix="rear_right">
    <origin xyz="-${bar_x/2 - bar_y/2 } -${bar_x/4 + wheel_length/2} 0.0" rpy="0 0 0" />
  </xacro:rear_wheel_lr>

  <xacro:rear_wheel_lr wheel_prefix="rear_left">
    <origin xyz="-${bar_x/2 - bar_y/2 } ${bar_x/4 + wheel_length/2} 0.0" rpy="${M_PI} 0 0" />
  </xacro:rear_wheel_lr>

</robot>